/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";
option java_package = "org.apache.ratis.proto";
option java_outer_classname = "ExamplesProtos";
option java_generate_equals_and_hash = true;
package ratis.example;

message FileStoreRequestProto {
  oneof Request {
    WriteRequestHeaderProto writeHeader = 1;
    WriteRequestProto write = 2;
    DeleteRequestProto delete = 3;
    StreamWriteRequestProto stream = 4;
  }
}

message ReadRequestProto {
  bytes path = 1;
  uint64 offset = 2;
  uint64 length = 3;
  bool isWatch = 4;
}

message WriteRequestHeaderProto {
  bytes path = 1;
  bool close = 2; // close the file after write?
  uint64 offset = 3;
  uint64 length = 4;
  bool sync = 5;
}

message StreamWriteRequestProto {
  bytes path = 1;
  uint64 length = 2;
}

message WriteRequestProto {
  WriteRequestHeaderProto header = 1;
  bytes data = 2;
}

message DeleteRequestProto {
  bytes path = 1;
}

message ReadReplyProto {
  bytes resolvedPath = 1;
  uint64 offset = 2;
  bytes data = 3; // returned data size may be smaller than the requested size
}

message WriteReplyProto {
  bytes resolvedPath = 1;
  uint64 offset = 2;
  uint64 length = 3; // bytes actually written
}

message DeleteReplyProto {
  bytes resolvedPath = 1;
}

message StreamWriteReplyProto {
  bool isSuccess = 1;
  uint64 byteWritten = 2;
}
